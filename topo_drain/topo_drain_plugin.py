# -*- coding: utf-8 -*-

"""
/***************************************************************************
 TopoDrainPlugin
                                 A QGIS plugin
 A QGIS plugin for planning surface drainage water management. It automates the extraction of main valleys and ridges, and supports various other water retention planning methods, such as Keyline Design (keypoints, keylines), pond siting and various other sponge-scape measures. The algorithms are mainly based on WhiteboxTools. The plugin will be developed further on a regular basis.
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                              -------------------
        begin                : 2025-08-06
        copyright            : (C) 2025 by Timo Wicki
        email                : wickitimo@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

__author__ = 'Timo Wicki'
__date__ = '2025-08-06'
__copyright__ = '(C) 2025 by Timo Wicki'

# This will get replaced with a git SHA1 when you do a git archive

__revision__ = '$Format:%H$'

import os
import sys
import inspect
import importlib

from qgis.core import QgsProcessingAlgorithm, QgsApplication, QgsProcessingUtils
from qgis.PyQt.QtWidgets import QMessageBox
from processing.core.ProcessingConfig import ProcessingConfig
from .topo_drain_provider import TopoDrainProvider
from topo_drain.core.topo_drain_core import TopoDrainCore

cmd_folder = os.path.split(inspect.getfile(inspect.currentframe()))[0]

if cmd_folder not in sys.path:
    sys.path.insert(0, cmd_folder)

class TopoDrainPlugin(object):

    def __init__(self):
        self.provider = None
        self.core = None  # Will hold the TopoDrainCore instance

    def get_whiteboxtools_executable_path(self):
        # The key used by the WhiteboxTools plugin for the executable path
        WBT_EXECUTABLE_KEY = "WBT_EXECUTABLE"
        exe_path = ProcessingConfig.getSetting(WBT_EXECUTABLE_KEY)
        print(f"WhiteboxTools executable path from QGIS Settings: {exe_path}")
        if not exe_path:
            msg = "WhiteboxTools executable path could not be determined. Please ensure the WhiteboxTools plugin is installed and configured correctly."
            QMessageBox.critical(None, "TopoDrain Plugin - WhiteboxTools Error", msg)
            raise RuntimeError("WhiteboxTools executable path not found.")
        return exe_path

    def check_python_dependencies(self):
        # Read python dependencies from requirements.txt
        dep_file = os.path.join(cmd_folder, "requirements.txt")
        REQUIRED_PACKAGES = []
        if os.path.exists(dep_file):
            with open(dep_file, "r") as f:
                for line in f:
                    pkg = line.strip()
                    if pkg and not pkg.startswith("#"):
                        # Only take the package name (strip version specifiers)
                        REQUIRED_PACKAGES.append(pkg.split()[0].split("=")[0])
            missing = []
            for pkg in REQUIRED_PACKAGES:
                if importlib.util.find_spec(pkg) is None:
                    missing.append(pkg)
            if missing:
                msg = (
                    "The following Python packages are required but not installed in your QGIS Python environment:\n\n"
                    + ", ".join(missing) +
                    "\n\nPlease install them using your QGIS Python environment before using this plugin."
                )
                QMessageBox.critical(None, "TopoDrain Plugin - Missing Dependencies", msg)
                raise ImportError(msg)

    def initProcessing(self):
        """Init Processing provider for QGIS >= 3.8."""
        temp_dir = QgsProcessingUtils.tempFolder()
        working_dir = QgsProcessingUtils.tempFolder()
        whitebox_executable_path = self.get_whiteboxtools_executable_path()
        if whitebox_executable_path:
            whitebox_dir = os.path.dirname(whitebox_executable_path)
        else:
            whitebox_dir = None
        # Create the TopoDrainCore instance only once
        self.core = TopoDrainCore(whitebox_directory=whitebox_dir)
        self.core.set_temp_and_working_dir(temp_dir, working_dir)
        self.check_python_dependencies()
        # Pass the core instance to the provider
        self.provider = TopoDrainProvider(core=self.core)
        QgsApplication.processingRegistry().addProvider(self.provider)

    def initGui(self):
        self.initProcessing()

    def unload(self):
        QgsApplication.processingRegistry().removeProvider(self.provider)
